# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: tests
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v3

    # symlinks the compiler paths automatically for us
    - name: Install GNU Fortran
      uses: modflowpy/install-gfortran-action@v1

    - name: Compiler versions
      run: |
        which gcc
        gcc --version
        which gfortran
        gfortran --version

    # On Windows, the compilers can cause issues when
    # using higher optimization levels
    - name: Add Windows environment settings
      if: startsWith(matrix.os, 'windows')
      run: |
        echo "FFLAGS=-O1" >> $GITHUB_ENV
        # Windows can't decode the README which has utf8 characters
        echo "PYTHONUTF8=1" >> $GITHUB_ENV

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download source files
      run: |
        python .github/workflows/download_mirror.py

    - name: Install pymsis
      run: |
        python -m pip install --upgrade pip
        pip install -v .[tests]

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --show-source --statistics

    - name: Test with pytest
      run: |
        # TODO: Get coverage for other modules without specifying pymsis.msis directly
        pytest --color=yes --cov=pymsis.msis --cov pymsis.utils --cov-report=xml --pyargs pymsis

    - name: Upload code coverage
      uses: codecov/codecov-action@v3
